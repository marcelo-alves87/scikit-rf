Changelog For scikit-rf
Generated on 2013-01-30 08:05




-------------------------------- v0.13 ---------------------------------

alex arsenovic (146):
      added a Frequency.npoints setter, which was accidently removed.
      minor change to save_all_figs
      fixing Frequency, and Network to accept arbitrary frequency vectors
      minor change
      last commit forgot to change the Frequency.copy() to allow for     arbitrary f's
      added option `Network.write_touchstone()` to toggle the  writing of     z0 in comments
      fixed bug with Network.read_touchstone() when reading a complex z0     as written by skrf
      added calibrationSet.py as a default import in calibration module
      added a forgotten test file
      added touchstone test coverage
      fixed minor __mul__ bug in Network
      fixed minor bug in media.
      adding pickling ability to Network
      adding pickling support
      big IO changes with new pickling support
      added pickling support to Media and RectangularWaveguide
      working on IO. made change to Network constructor.
      moving touchstone into io and fixing cirular depency problems.
      fixed skiped test_touchstone test
      added test files i forgot
      added more flexible ways to construct `Network`
      added __repr__ to Calibration
      minor changes to repr strings
      worked on calibration pickling, added `save_space` function
      added new submodule `data` to hold data for examples and such     rename media test case to be more consistent with rest of skrf     modified picking command for Network
      removed `has_run` property of Calibration, replaced its function with a     try/except block
      worked on calibration , and pickling of Media types     the problem is that the ability to have propagation_constant     and characteristic_impedance be functions prevents the possibility     of pickling. Furthermore, it is confusing. perhaps i will solve     this by re-structing the Media type
      :qq
      wrote `read_all`, and `write_all` functions
      fixing Touchstone class to take file objects
      minor
      applied matts fix to vna.ZVA40.upload_cal_data
      minor
      minor
      minor
      modified `io.io.write` to use pickling protocol 2, due to a     incompatablity between windows and linux of protocol 1
      changed default arg value for Calibration.apply_cal_to_all_in_dir()
      fixed bug in `Media.resistor` , did not force float division
      added a stitch function for combining Networks
      added a `shade_bands` function to highlight bands in a multi-band plots
      added a `shade_bands` function to highlight bands in a multi-band plots
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      fixed error in documentation for `Network.plot_s_unwrap`, thanks     to skint
      fixing numerical bugs in s2z, s2y and other minor changes to     Network.s and z0
      removed unwanted files
      removed unwated doc files
      renamed some examples     added a better singularity support for s2z, s2y bugs and tests
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      minor
      forgot to ever merge this branch     Merge branch 'treysdevelop' into develop
      changed wording of gustav's new option for smith chart which allows     for annotation, like matlabs smith chart
      Merge branch 'gustav' into develop
      Merge branch 'gustav' into develop
      ammend
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      working on docs, added some data
      docs, and various minors
      docs
      making Network operators more flexible, and adding tests
      moving io funcs around and sorting things out
      restructuring IO funcs.
      moving things, working on docs
      organizing IO/convenience code. working on docs
      moved ploting functions from util into plotting
      docs changes to index page
      docs
      added ipython directives, and converting docs to ipython-like     following sampledoc from mpl
      working on docs for introduction
      working on introduction documentation
      added Network.interpolate_from_f
      fixed forgotten draw_labels argument in network.plot_s_smith
      re-structed index. general doc work
      added new logo
      working on docs
      allow NetworkSet to accept a dictionary
      working on uncertainty_estimation
      renaming tutorials to better reflect their topic.
      added write() method to NetworkSet
      adding virtual instruments docs
      BUG: fixed io.general.read() EOFError on Windows bug
      BUG: fixing binary read bug in tests and Network.__init__
      ADD: added `comments` property to Network.
      BUG: media.cpw.CPW.characteristic_impedance returned scalar,     changed to return a vector of len self.frequency
      docs
      DOCS: examples sections
      FILE: replaced plain=text data pickle files with binary ones
      DOC: added new introduction tutorial
      DOCS: renamed docs/tutorials/circuit_synthesis to media
      DOC: added virtualInstruments tutorial     FUNC: change defalt write_z0 value for Network.write_touchstone, because     it is probably not what the user expects as default
      BUG: error on import from helper.py, has been renamed to util
      BUG: fixed more helper imports
      CODE: new virtual intrument for spectrum analyzers and proper     testing infrastructure
      CODE: adjusting VI tests to skip if neccesary     DOCS: updated VI docs
      FILE: recursive renamed virtualInstruments to vi     using     find . -type f -print0 | xargs -0 sed -i 's/virtualInstrument/vi/g'
      Merge branch 'rename-vi' into develop
      DOC: added example
      FILE: removed virtualInstruments that dont belong in here
      fixed bad link
      CODE: fixed all errors in HP8500 class vi
      FILE: added io.csv module and tests     CODE: created a module to hold mostly csv reading functions.
      CODE: removed  conditional import of connect_s_fast from network.py     INST: working on indlucding data in sintall
      organizing IO/convenience code. working on docs
      moved ploting functions from util into plotting
      docs changes to index page
      docs
      added ipython directives, and converting docs to ipython-like     following sampledoc from mpl
      working on docs for introduction
      working on introduction documentation
      added Network.interpolate_from_f
      fixed forgotten draw_labels argument in network.plot_s_smith
      re-structed index. general doc work
      added new logo
      working on docs
      allow NetworkSet to accept a dictionary
      working on uncertainty_estimation
      renaming tutorials to better reflect their topic.
      added write() method to NetworkSet
      adding virtual instruments docs
      BUG: fixed io.general.read() EOFError on Windows bug
      BUG: fixing binary read bug in tests and Network.__init__
      ADD: added `comments` property to Network.
      BUG: media.cpw.CPW.characteristic_impedance returned scalar,     changed to return a vector of len self.frequency
      docs
      DOCS: examples sections
      FILE: replaced plain=text data pickle files with binary ones
      DOC: added new introduction tutorial
      DOCS: renamed docs/tutorials/circuit_synthesis to media
      DOC: added virtualInstruments tutorial     FUNC: change defalt write_z0 value for Network.write_touchstone, because     it is probably not what the user expects as default
      BUG: error on import from helper.py, has been renamed to util
      BUG: fixed more helper imports
      CODE: new virtual intrument for spectrum analyzers and proper     testing infrastructure
      CODE: adjusting VI tests to skip if neccesary     DOCS: updated VI docs
      FILE: recursive renamed virtualInstruments to vi     using     find . -type f -print0 | xargs -0 sed -i 's/virtualInstrument/vi/g'
      DOC: added example
      FILE: removed virtualInstruments that dont belong in here
      fixed bad link
      CODE: fixed all errors in HP8500 class vi
      FILE: added io.csv module and tests     CODE: created a module to hold mostly csv reading functions.
      INST: changing install-related files to adjust includes
      BUG: fixed Touchstone.comments ==None bug
      Merge branch 'guidry_dev' into develop
      CODE: adding functionality to PNAX
      DOC: removed all images no longer included in docs
      FILE: added missing link to logo in teh docs
      CODE: change doc conf to grab version from setup.py
      Merge branch 'develop'

Trey Greer (3):
      Use 'renumber' method to implement the 'flip' method.
      Added examples to doc string for method Network.renumber()
      Fixed bug in network.connect() method port impedance managment

Matt Guidry (home) (2):
      CODE: Change network.py to write the comments to Touchstone files when using write_touchstone
      CODE: updated touchstone.py and network.py to support reading of comments from Touchstone files.

Matthew Guidry (2):
      Remove singleton dimensions in subnework creation
      Revert "Remove singleton dimensions in subnework creation"

Gustavo Martins (1):
      Adding to plotting.smith() a MATLAB-like smith chart option

-------------------------------- v0.12 ---------------------------------

alex arsenovic (41):
      removing old testCases/ directory, to follow numpy/scipy testing convention
      Merge pull request #4 from treygreer/master
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      Merge branch 'master' into develop
      removed old testCases/ dir again. moved modified testNetwork.py     to tests/test_network.py
      added a skip decorator to the rectangular waveguide test, because     i know it fails (due to z0, and port impedance mismatch? i forgot)
      modified README
      moved 'z' and 'y' creation, to the accessing properties, as opposed to     the assignment of 's'. this was done to increase speed as     the s2y, s2z functions are slow.
      added shunt_capacitor and shunt_inductor construction tests, because     they dont work!
      made a fix to media.load, which should work for number-like or     array-like input.
      added funtion for media to write its contents to a csv file.     will probably add a read method as well.
      added test coverage from Media.write_csv, and Media.from_csv.     this required a test for equality for the Media class     also had to force the vectorization of port z0 proptery in Media     to be able to write a csv file
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      added some media test cases for lumped elements, and associated     qucs projects/data.
      added qucs project files
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      gave calibration.plot_errors scale option
      added a copy() method to NetoworkSet
      fixed minor bug in dot_product calibrationset function. need to     add docstrings and testcases to this.
      fixed but in NetworkSet.plot_uncertainty_bounds_s_db.
      added copy() method to networkset
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      removed error in docstring of a calibration method
      minor
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      fixed capacitor and inductor methods  of media/media.py.     based the implementation off of qucs
      added a resitor() method to media
      fixed minor error in docstring
      changed names of internal testing functions in network.py
      working on docs
      working on docs
      changed the Frequency object to internally store frequency     information in a frequency vector `f` and a `unit`.
      moved docs around, created an examples directory
      working on docs
      docs
      fixed latex errors in ?2? methods of network.py
      Merge branch 'tmp_branch_git_is_hard' into develop
      minor docs fixes
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      making new release, modified version number, all tests pass, git     cleaned the tree, now to merge into master.
      Merge branch 'develop'

alex (16):
      Merge branch 'master' of github.com:scikit-rf/scikit-rf into develop
      fixed bug in networkSet.signature.
      added class method of NetworkSet.from_zip() which will     take a zipfile of touchstones and return a NetworkSet, of the     files.
      modified new NetworkSet.from_zip() to skip over files in archive,     which fail to construct a network .
      added some more versitile functionality to the NetworkSet.signature(),     so that the difference can be any operation (div, sub, etc), and     allowed specification of difference from mean, or from initial     network
      added a __len__() to network which return lenght of frequency axis.
      replaced the equality test for Frequency class with a numerical     one due to some annoying problems.
      gave frequency a __len__ property
      added z setter, and made z and y calculated upon access
      pointed  Frequency.__repr__() to Frequency.__str__(), nice for ipython
      Merge branch 'treys_commit' into develop
      fixed bug in 'z' property
      added  `span` and `step` properties to Frequency object     changed fourth pane in Network.plot_it_all(), to be complex plane
      added more robust support for convenience.hfss_2_media, with     support for multiple ports. now a list of Media objects is returned     one for each port.
      added some shorthand convenience names for common classes and     functions in the init.     made NetworkSet grab properties from the relavetnt     network variables
      added a scale parameter to Calibration.plot_uncertainty_per_standard()

Trey Greer (6):
      Implemented impedance and admittance parameters.
      Fixed bug which prevented complex values for y and z parameters.
      Beefed up Network's __str__() method to handle unitialized networks.
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into develop
      Added 'renumber' method to renumber network ports, used it to fix bug in connect method.
      Fixed some typos in strings and comments.  No impact on execution.
----------------------------------- v0.11 ---------------------------------

alex arsenovic (603):
      first commit. added mwavepy.py for the first time
      added examples directory with  examples, duh.
      added the pydoc documentation
      added psd2TimeDomain and timeDomain2Psd funcions. they are not robust.
      added freqUnit variable, so that freq has meaning.
      minor changes
      added osm calibration functions. changed onePort type to include a zin.
      added wr class
      changes made to wr type (waveguide type)
      changes things around to adhere to python standards
      updated example and documentation
      added pythics instruments folder and plot touchtone instrument
      nothing big
      added pythics vi files
      moved pythics_instruments into mwavepy folder, so that it could be imported via     import command.
      added __init__ to pythics instruments
      added code
      fixed writeTouchtone function in mwavepy (still could use some work)     mv'd vna_hp8720c class into the VI file vna, so it is called like
      updated vna.py and record touchtone
      added writeTouchtone to oneport.     also, touchtone is a spelling error. its actually touchstone
      added a lot to the gui
      <none>
      <none>
      <none>
      <none>
      added vna model option, so both the 8510 and the 8720 can be controlled with same gui.
      re-named recordTouchtone to vnaGetData
      just moved things arround.
      improved the smith() function by generating circles analytically.
      fixed vna model choice box error
      added __init__.py, so you can import pythics.instruments. i must have deleted it on accident
      added docs for pythics_instruments.vna
      deleted pyc
      fixed smith bug for s.plotsmith() and fixed bug in example code.
      added installer
      added GPL's
      added loadAllTouchtoneInDIr function
      added some unfinished cal stuff
      added more cal stuff and wr type
      added a some transmission line calcs, still working up to standard defs.
      added more wr functions, still havent fixed genWaveguideThru, mmm
      more waveguide adjustments, added class waveguie, and made wr a subclass of that.     in the future it would make sense to make a generic transmission line class which has as subclasses: waveguide, microstrip, coplanar, etc
      small changes
      shelled out some future classes. and discovered teh 180deg bug inteh genWaveguideThru was du to my mis-drawing of integration line in hfss for the waveports. then it took me 3 hrs to find my hack, that i forgot about !!
      shelling out network code and basic mwave engineering stuff
      still working towards one port cal
      no errors, but one port osm not verified to work yet
      minor changes. shelled out some calibration kit types but left as commented.
      little things
      added teh touchtone class, taken from dataplot project. it is very good. much better than my code. started to implement the correct form of a ntwk
      fixed bugs in touchstone:     used 360/pi for deg , whould be 180     used incorrect matrix representation, was transposed for what it should ahve been at any given frequency slice
      added some plotting functions
      more plotting stuff. its starting to come together.
      comments
      updateing code/ commenting / re-arranging
      more changes. . .
      huge changes, many deletions. need to break up files next. and do some testing.
      moving/deleting
      had to revert to version 58  because 59 missing ntwk(). fixed bugs.
      changed waveguide std create type, its not a ntwk     is the all the freq parameters in the ntwk type needed?     made some convenience improvements to ntwk.plot*, so one ports dont need to specify indices.
      fixed some calibrations ruitines to be able to take ntwk instance.     started to change the vna vi, probably broke it.
      just learned about how to copy a class.  used this in returning a new ntwk () instance for the applyABC function . might want to make a ntwk.copy.
      minor changes
      minor changes
      added geaABCLeastSquares but its not working yet
      minor changes
      minor changes
      fixed gamma() so it can accept numpy.arrays.     various other small changes
      moving things arround. started createImpedanceStep()
      got impedance step working and fixed returned shape for createDelay
      added some simple lumped element functions so that i can model waveguide discontinuties from marcuvitz
      finished getABCLeastSquares. looking at wiki for moore-penrose psuedo-inverse, and travis oliplants scipy tutorial made this easy.     also this has a nice connection to geometric algebra, which i have yet to understand.
      added deEmbed1Port, which is really the same thing as applyABC.
      working  on cals
      minor
      added some try/excepts arround imports.     made connectionSeries way better, working towards accepting types     	mwavepy.ntwk     	nympy.ndarray     	sympy.Matrix
      minor changes
      minor
      updating vna.py for the new ntwk class
      minor
      added my matplotlibrc
      started to overload the primitives operations for ntwk type connections     * = cascade     / = deEmbed     + = parrallel
      finished de-embed, not heavily tested.
      overloaded __div__ for ntwk with deEmbed
      fix some bugs in deEMbed
      changed cascade function
      updated docs and fixed some bugs
      added a abc2ntwk function.
      minor changes
      minor
      futher overloaded the deEmbed function so that it can take a network and a tuple of networks.
      added some hfss plotting functions.
      added hfss plottign and text procesing junk
      minor changes
      started theh zva VI.
      minor
      asdf
      fixed up the examples
      changed loadAllTouchstonesInDir to return dictionary type
      minor
      removed thsi file
      added a function saveAllFigs
      <none>
      rszva updates
      added isReciprocal and abc2CoefsDict
      made ntwk and new style class and started to implement property's
      added a time domain transform for ntwk object,it might be a good idea to define the freq some other way     also defined a changeFreqUnit function for ntwk. need to change all of the members of ntwk     to propertys eventually
      added conductor loss functions to waveguide class.
      added an example for calculating waveguide loss chart
      updated examples
      changed version label, (should automate this so it doesnt have to be updated)
      fixed example and more waveguide loss fixed
      minor
      starting calKit class. maybe a different name would be appropriate
      finished ( for now) the calibration class.     coefficients are only calculated, if they havent been before, so if a kit is updated then     calibration.calculateCoefs() must be run again.
      minor
      minor
      added a new one port cal method, alexCal, but it shows no benefit to the standard algorithm,     other than it only inverts a 2x2 matrix.
      started to add SDDL calibration, for unkown lengths of delays
      sddlCal is working, and cool.  need to make a version which assumes more of a model, than     just  mag=1. like the first implemenation, which assumes a offset short of unkown length.     this will prevent effects of badly known standards. also, comparing the two techniques     will produces more inciteful information, such as accuracy of assumed model.
      <none>
      added sddl1 and sddl2 to the calibration types accepted by class calibration.
      adjusted calibration type, for sddl cals, so that it saves the auto-cal'd standards,
      wrote sdddd2 but have not seen it converge to a very low residual value, still at 700's.     possible reasons:     	function is not well behaved, so minimizing wont be so easy     	the delay shorts are not good models     	the wg class is not good enough
      working on sddl and sdddd
      added some plotting functions to illustrate evolution of iterative calibration methods
      <none>
      added averge function as a class method to ntwk class
      more work on sdd* cals
      added sdddd2UnknownLoss and am fiddling with sdddd2
      sdddd2UnkownLoss works
      added a resizeFreq function so that networks of different number of points can operate on     each other for de-embeding, etc
      but resizeFreq dont work yet, so i have it raise a NotImplimented exception
      removed superfolus code in getABCLeastSqaures and renamed it to onePortCal.     recently discovered that the auto-cals are well known techniques. its called     non-linear least squares and its available in scipy.
      re-wrote getABCLeastSquares and renamed it onePortCal
      start writing transmissionLine super class and freespace
      more work on transmissionLine
      wrote a frequencyBand class, just to suport transmissionLine functions which require     frequency band info, so a transmissionLine class can be assigned a frequencyBand,     this way we dont have to redudantly supply this info
      workign on transmissionLine methods
      minor?
      fixed minor indentation error
      working on onePortNLS
      finally fixed the classmethod errors in transmission line.  the problem     was that class attributes are different from instance attributes. and a     class method must not access instance attributes by default.
      broke up the main file,  qualified some imports
      tried to make a freespacePointSource class for 1/r^2 dependence, ran out of interest.
      added a mobius class for the mobius transformation, which could replace reflection     coefficient, and some other things ...     also looked at the alexCal, have some error, which i didnt notice before about     when the ideal standard is a match, whcih causes an inf because i have 1/a1-1/a2     no sure what to do about this yet
      got onePortNLS working thanks to new functions     scalar2complex and complex2scalar
      minor unsure?
      minor
      <none>
      sdx2 working and tested.
      removed the NLS2 which is very hard to write because leastsq only takes 1D lists     the problem with this is that my cals rely on calling a transmission line,     method, createDelayShort.
      minor fix on __init__, commenting in transmissionLine
      comenting
      changed mobius so it can take a characterizing matrix, h.     also fixed waveguide.beta function so that it will produce an     imaginary number below cutoff
      added a freespaceWithAttenuation class to the transmission line bunch.
      updated waveguide type to use frequencyBand type
      still updated class for frequencyBand.     also added matrix invertability test on onePortCal, might slow down iterative cals     so this needs to be tested.
      removeing old trunk
      moved new branch in
      moved testCases and the un-used mobius class to a testing folder, and consolodated     the constants into the convenience file, which makes more sense anyway
      i was edditing the branch on accident. so i am moving the changes over here.
      accidentally cp'd virtualInstrument/__init__.py to transmissionslines
      moved this to calibrations --This line, and those below, will be ignored--
      had to fix some circular imports caused by consolidation of calibrationFunction     sorted out
      added a plotting.py file to hold smith chart, which needs major improvement
      added docs, and a script to generate docs in teh future
      added distutil related files
      added the source distribution
      added windows binary installer
      fixed error in setup and added teh zip source disto
      added setuptools to install, and registerd with PyPI, this should help with dependency
      fixed minor bug (i think )
      just commented out
      updated install modules due to minor bug in vna.py
      removed dist directory because its recursively includeing itself in build when i use setuptools
      <none>
      <none>
      removed teh requires option because the compile of matplotlib through setuptools doesnt fucking work
      started the manual.
      added a beta versino of manual
      added eps files
      updateing stuff
      working on docs
      <none>
      moving docs around. also looked into sphinx and epydoc. both are good     and good for different things. the sphinx is more aestetically     pleasing and cleaner, but the epydoc is easier and more thurogh
      udpated docs and changed incorrect comments on doc strings
      fixed minor bug in calibration/network referenceing. forgot what else.
      added my variational models for waveguide discontinuities . these are subject to large changes, and are very imature
      implemented the self-calibration using variational junction admittance.
      added discontinuities module init
      fixed bug in new cal algorithm
      added parametertized standard class. this will allow one calibration routine to run for     arbitrary parametrized standards making it so i dont have to re-hack it every time.     also i modified variational methods
      wrote the unified self-calibration algorithm, but have not tested yet.
      working, working
      decided to implement specific parameterized standards as classes.
      working working
      HACK HACK     made a hack on the transmissionLine.RectangularWaveguide.propagation_constant     so that WorkingBand can calculate the response of a line (or delay_short)     without having to provide mode-information.     really the WorkingBand is a TEM-Working band, otherwise all teh network creation     functions would take mode-index parameters.
      added a simple zva40 class needed for imeediate use
      working on terminated variational expression.     added a simple, PNAX class to virtualInstruments/vna used for drift testing.
      workign working
      need to fix all the matrix handling of waveguide functions, which sucks
      updated docs
      made some import changes to transmission line functions. i need to fix this conceptually.
      fixed the junction admittance with termination, i needed to make assumption that     region I was matched, otherwise the same termination boundary conditions are     enforced as in region II.
      created a new and more sensible variational function for aperture_field formulation     its called aperture_field.
      working on variational methods and parameterized standards.
      fuck yea
      making major fuckups in cascade and de-embeding functions, due to serious bug lihan     pointed out. i have no idea how i could not have noticed this. it must be a mathematical     anomaly.
      started to add testcases, a long long time too late. ..
      moved testing to beta
      added testCases
      removed redudant files , svn sucks
      testing
      added a good step up method
      added a general rectangular junction, of which all the others will soon be put into terms with.
      tested rectangular_junction againt rotated adn show agreemenet.
      wrote a 8510c vi, without any testing.     had to change an argument to the rectangular_junction because i want to use this as a function     for my parameterized_standards, and they only work with non-iterable arguments.     i could fix this. but not now.
      probably messed up functionality     working working
      fixed a major bug in teh parametrix standard calibration. it could only handle     stds with 2-parameters, due to my inability to count.
      added some additive noise support. one is a method of Network,     this is needed because you cant simply add phase noise without knowing the     phase of the signal you are adding it too.
      fixed network averaging function. it was a stupid error
      not sure, probably minoro changes.
      made some changes to 8510 vi
      update vi's
      added vna phase noise example. im not sure i will keep all the raw touchstone files.
      modified example
      minor
      added output of vnanoise analysis example
      added another plot to noise analysis to illustrate the effects of averaging
      added a passivity and changed copy import to deep copy, so it would copy objects of objects
      added a multipath parametric standard. not sure if it will work or not
      working on Network.passivity
      added initial two port implementation
      two port cal appears to work although new shit has come to light.     i dont know if the s-parameters of the error networks can be     uniquely determined.
      fixed a bug i recently induced in workign band, which forgot to assign     complex dtype to delay short. this did not get flagged in teh test cases.     because i dont test all working band functions like delay_short.
      trying to add two port cal, which is turning out to be time-consuming.     teh calibration class's internal mechanism are a bit over-sophisticated     and non-sensible.
      two port apears to be working. need to make a coherent test case
      minor
      two port is working, fixed oneport2twoport function in network .     starting to make paraterized standards twoport able
      offset rectangular junction  now supports returning a 2-port     this should only be used when appropriate, ie when symetry holds
      added parameterized standards for two port, such as line of unkown length,     and waveguide thru,lines, with flange missalignment.
      having a root choosing problem in one_port_2_two_port, which is showing up when     calculating s21 from s11, as found by the variation methods for junction admittance.
      made a hack-fix to the one port 2 two port function in network. im not sure how     to justifiably fix this phase ambiguity.     testing some new minimization routines, such as the gauss marquett (leastsq)     and the fmin_slfp, whichi is iterative least squares with bounds.
      removed all teh touchstone files in the example. it is too big and anoying
      working workin
      added and made some changes to the two port self-calibration algorithms. they are     still being moved around. not sure if i want to implement the bounded parameters     as i have
      playing with self-calibration minimization algorithms, and bounding.
      added interpolate function to network. needs to be tested
      unsure of what i changed in these
      fixed minor bug in variationalMethods, added a non-linear least squares solver for     one port in the calibration algorithms
      added a nonlinear least squares calibration for one port
      added function to unterminate switch terms from two-port data
      made the Network.plot_s_smith only draw smith chart if it doesnt exist     this is tested by inspecting the number of patched on the axes
      starting to add support for switch terms in calibration type.
      added a legned_off function in convenience, not sure about the others
      added dll folder for instruments
      added futek dll
      initial file for futek load cell
      removing the loadcell vi, becaus .net sucks, and adding a esp300 VI
      added stage
      removed dll
      working on stages
      minor
      minor
      minor
      added generalSocketReader, and working on new ZVA40
      finished initial version of the new zva40
      added a futekloadcell vi which using subprocess module for     communicating through pipes
      rewriting futek load cell using subprocess
      working
      made a monitor
      fixed bugs in zva40_alex and working on loadcell
      added a high level vi for lifetime testing
      working
      workin
      working
      added the futek pipe binary
      merged changes from dell. these include fixed futekLoadCell     init and a motor-on fix for the stage.
      working working
      working
      working
      working on vi's
      working
      asfd
      minor
      removed wrong filename
      changed the arguments of  Network.write_touchstone(), in a way which     probably will break a lot of previous code.
      made changes to plotting functions in network so that they     actually change the axes, if it is passed to them
      working on pythics vi for vna
      working
      minor
      r400 , wow.     got a pretty decent vna working. tested on 8720.
      working on vna pythics instrument
      pythics instrument tested on both 8720 and 8510C and     simple functionality seems to be working.
      added screenshot of pythics vna instrument
      added a 'change_frequency' method to Network class, which     does what you think. uses interpolation if frequencies are     different lengths
      changed smith chart labels
      added a new module called programs which holds scripts and     higher level programs which can be used from outside of     the python shell
      added a gnome mime definition for nautilus file manager integration     also important note:     	i changed the way the network plotting commands default arguements     so the default index is None and this will cyle through range of index.
      changed the order which touchstone loads a file, so it     raises a io error if file doesnt exist as opposed to a     touchstone extension error.
      added a socket futek class. it seems there is a strange problem with     the subprocess class in windows, somthing related to the pipes.
      working on vi's
      working on vi's
      working
      working
      worksing
      working
      working on vi.
      added cpw_prober pythics vi
      working
      added new ZVA40 VI, the experimental one  works well, but is too     complex for normal usage.
      added a __getitem__ method to network type which returns a the network     evaluated at given frequency index's.     also working on some calibration algorithms, specifically adding error     analysis to one port
      fixed bug in one port nls
      starting to understand the covariance matrix and its application     to calibration verification, as well as its usage in determining     the presence of errors in the standards themselves.
      forgot what i did see diffs
      <none>
      added switchterms support to two port cal. need to test it.     also added a ploting function which plots complex arrays on complex plane
      working on vi, not sure what i didnt to cal algorithms
      altered teh calibration plot residuals a bit      changed the test cases a tad
      working on vi's
      sadf
      added helper on probe tester
      added a csv_2_touchstone for convinience
      changed build script
      made BIG CHANGES to Calibration class. and BROKE parametersized     one port calibration type.
      updated docs on calibration
      added a one-port calibration example which illustrates usage of new     calibration features
      changed teh calibration algorithm for parametesrized cal to take     keyword ideals instead of ideals_ps, for consistency with changes     recently made to calibration class.
      added a complex_components() function to return all usefule components of a     complex number
      changed frequency equality test to NOT consider frequency unit
      updated the pydocs.     changed the Network.write_touchstone() function to take dir and filname, like     i used to have it. also i removed users ability to control extension, because     its more anoying than usefule.
      changed the touchstone class so that it will handle an arbitrary     number of ports. i dont know why i didnt do this earlier.
      found major bug in freespace, pertaining to lossy materials,     which is why i didnt notice till now.
      fixed another crucial bug in transmissionLine.functions electrical_length, for frequency units passed to gamma function
      !!MAJOR CHANGES to transmission line functions !!
      added conversion functions for distributed circuit parameters     and wave quantities.
      working on transmissionLine, and transmissionLineTest classes.
      minor
      changed variable names dramatically in tem class
      working working
      transmission line class is working pretty good now. tested against     an hfss simulation of a cpw line.
      started the n-port arbitrary connection algorithm. i am using     the algorithm called, subnetwork-growth, and originated by     Gunar Fillipson and also published by Rutledge and Compton.
      finished n-port connection implementation. Has not been tested.     Like the other s-parameter function this functionality was broken up into     two parts: a S-matrix algorithm which can take either 'nxn' arrays     or 'fxnxn' arrays, and then a wrapper function which takes mwavepy.Network     types.
      arbitrary connection of n-port network ports seems to be     working.
      implemented n-way lossless splitter.
      cleaning stuff up, added a impedance mismatch standard to working band.
      impedance step is working and some other network     creation dependencies where made simpler.
      updated docs and mistakenly added some pyc files. ill deleete them later
      cleaned up working band, added ability to provide line lengths     by electrical length. which is way better.
      minor
      implementing handling of port impedances
      port impedance handling implemented for connect() function of     networks. this is done my calculating the impedance_mismatch     of the two ports and inserting this 2-port network between the     two ports to be connected.
      implemented port impedance handling for innerconnect function
      added port impedance support to WorkingBand.  havent tested much but     appears to work.
      started to convert docs to sphinx. eventually i will replace     the wiki and manual with just the sphinx so i dont have to keep them in sync
      working on sphinx docs.
      working on docs
      docs
      removed the manual. it will now be a sphinx latex output
      managing new docs
      update docs
      fixed some bugs which where caught by testCases
      working on docs
      docs
      docs
      having a pain added all these files
      docs
      500 commits. woah.
      docs
      minor
      need to fix some shaping propblems on the network'z handling     of z0 and also fix tranmission line stuff.
      still working on z0 property. its tricky because i want to have it     be able to get set in a flexable way
      i think it may be working need to write tests
      added port impedance support in Network.write_touchstone(). copied convention     used by HFSS so that i only have to write one read_touchstone()
      docs updated
      changed network.s setter, there was a bug.
      docs
      docs
      fixed z0 shape update during Network.interpolate()
      forgot
      removed unneded files
      added addmittance contours option to the smith chart.
      added a plot_s_complex for network type, in case you dont want a     smith chart.
      starting the begining of a re-structuring     of network creation.     workingband and transmissionlines will be consolidated into     a single class called media, or somthing similar.
      fixed bug in interpolate, that i made when i fixed the z0 aspect of     interpolate
      added a new example for impedance matching to docs
      working on new media class structure to replace workingband
      added a tem class for TEM transmission line media
      working
      renamed tem to generic, which is more appropriate because     it can handle tem as well as non-tem
      working. this is a tricky thing to structure. there is no clean AND     simple way to do it that i see.
      added freespace Media class
      added initial cpw class,
      big commit. re-structure and writing of many media classes.
      renamed and added new stuff
      removed freeSpace.py should be freespace
      minor
      organized functions around in media, and moved transmissionLine.functions     into seperate file, because the transmissionLine submodule is being removed.
      minor
      working on cpw model with conductor losses.     general model tested against hfss and agrees as well as     one would expect
      cpw loss working
      working
      forgot to add these
      working on test cases for media, and fixing bugs
      massive changes.     removed working band. removed all references to working band.     where appropriate, changed to Media type,had to remove some parametric standards.
      removed pyc files
      BIG: removed workingBand.py
      removed this dont need it
      removing transmissionLine sub-module. it has been displaced by media.
      trying to delete but svn is giving me trouble
      fixed bug
      removed discontinuities submodule, this relied on old transmissionLine class     and is not very usefule anyway. needs to be re-implemented as special functions     for media.RectangularWaveguide Class.
      cleaning up
      updated docs
      creating a calibration sub-module and moving all relevent files into that
      made an important structural change to Media Class.     i needed to ability to pass propagation constant and characteristic_impedance     as functions, so that calling them would cause their re-calculation.     this is needed if properies of the Media instance changes.For example, if     i change the frequency vector information, or a line-width for cpw, i want     the propagation_constant and characteristic impendace to reflect those     changes.
      minor
      re-structuring parametric standards to be more logical.
      working
      renaming and orginizing parametricstandards
      minor
      minor
      minor
      squashin bugs
      working on parmetric standards added a shunt c and shunt l.
      added a func_on_networks function for applying functions     to lists of networks. can be used to implement averaging and     std dev on lists of networks. and can be applied to specific     properties. so the mean of the s_mag can be calculated.
      added a plot_residuals_smith for calibration
      added some awesome calibration functions for residual analysis
      minor
      minor
      updated docs
      fix svn of docs
      svn clean up
      svn fixing docs
      docs
      dont need these any more
      moving around
      docs y
      updated docs
      updated docs
      docs
      changed the residual_ntwks property accessign of Calibration class so that they are only     accessed once, unless user sets them to None.
      added some residual-based systemetatic, stochastic, and composit error estimators     to the calibration class.
      renamed the residual error functions of calibration to be more     in line with commonly used language.
      deleted old api docs
      recursively added all docs. we will see if this is a good thing
      removed examples/  from mwavepy. this will now be accomplished in docs     by sphinx
      stupid docs
      doc
      doc
      removed vector graphics from docs, as they are too big
      added only the pdf manual the latex build is not useful
      added sphinx html.
      docs
      added a test so that impedance miss-match network not added unless     there is a  missmatch. this increases the speed of cascade by 2x
      added new file call calibrationFunctionsm, which contains     CartesianProductCalibrationEnsemble for brute-force uncertainty     analysis
      created function which takes un-ordered pair of possibly un-equal length     lists for ideals and measured Networks and aligns them     based on their names     .
      moved the calibration function for alignment of un-order lists into     the Calibration class. functionality is accesable with flag 'sloppy input'
      added a subset calibration ensemble generator based on the concept     described in penfield and baurer's paper. it produces a set of     calibrations from 'm choose n' subsets of the measurements
      updated doc strings
      fixed a bug in cartesian cal  and addeda  plot_uncertainty _s_db function
      added some missing Network properties of 's_re' and 's_im', their respective     plottign functions.
      i forgot
      fixed bug in two_port switch_term options
      added comments and arranged code a bit
      fixed but in cal functions
      added a plot_passivity command for Netowrk
      renamed the calibration ensemble generator functions
      added some math function and updated some docs
      forgot
      added a new class called; networkSet .
      moved many functions from network into networkSet
      working
      fixed missing import func_on_network references
      working
      working
      working
      working.
      working
      wrapping up the networkSet class. clarified the difference between a     element-wise function and a set-wise function
      working
      working
      working
      thought of new way to store/plot uncertianty info, as ntwk triplet.
      added a nice little convenience function to add marker to plots after     they have been plotted
      added supporting files for screencast tutorials to docs under examples.     in each tutorial's directory is also a link to the video on youtube
      minor
      working on docs
      forgot
      working on docs
      <none>
      docs
      docs
      docs, added matplotlib plot directive.
      docs
      docs
      docs
      working on docs
      docs
      added sphinxext from numpydoc
      added docs
      adding
      <none>
      trying to fix svn eror
      <none>
      re-added source of sphinx
      test
      minor
      removed build directories
      docs
      docs
      renaming things
      working
      working
      docs
      docs
      docs
      <none>
      docs
      docs
      added a smith chart clipping on given radius. this is thanks to  juergen's  suggestion.
      docs
      removed the api section
      docs
      docs y
      <none>
      docs
      docs
      docs
      working on docs. changed numpydoc config, and wrote a class.rst template.
      arranging things
      minor
      removed all generated rst files from repo. otherwise these get mod'd too frequently
      svn has errors i am fixing
      fixing
      working on network docs
      working on docs. im not sure what the standard on class property docstrings,     i am including a Returns section so that the user can determine the type     of the property.
      working on docs
      added dynamic subnetwork generated properties. super dank.     next i am going to dynamically generate the rectangular plots
      finished dynamic plotting methods for Network class. although     i am not sure if i will keep this feature. the code is more concise     and new plots are added with a trivial amount of work, but i dont     know if the sphinx autosummary will work with dynamic functions.
      working on docs
      docs
      docs
      docs
      docs
      docs
      docs
      docs
      docs
      docs
      modified readme to point to docs
      moved mwavepy/ to skrf/. used find and sed to recursivly rename all instances of `mwavepy` to     in [*.py, *.rst, *.txt] `skrf`.
      renamed mv.* and import statements.
      removed dynamically generated plotting commands from Network
      Merge branch 'network_plot_fix'
      fixed errors in README
      added long_description and changed webpage.
      Update README.txt
      Update README.txt
      Update README.txt
      added logo images, and modified conf.py to add to docs.
      added a name property to NetworkSet, and more interpolateing     functions to Network class.
      added caled_ntwks property, and modified apply_cal()
      began uncertainty estimation tutorial in docs
      trivial test commit
      found major bug in media class and re-wrote a lost function.
      added preliminary script template support.
      added copy() methods to Network and Frequency objects
      changed all copy.copy() calls to  self.copy() methods
      modified tewtNetwork.py to run from command line
      Merge branch 'BUG-deepcopy-fix'
      removed missed copy() calls with list slicing, and self.copy()
      Merge branch 'BUG-deepcopy-fix2'
      minor docs adds
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      edited Readme
      edited Readme
      edited Readme
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      docs: minor works
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      Merge branch 'doc-small-adjustments'
      added checks/tests to network
      Merge branch 'fix-cascade-w-diff-npoints'
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      fixed major bug in distributedCircuit class, and docs.
      minor
      Merge branch 'BUG-distributedCircuit-omega'
      Merge branch 'general-dev' of github.com:scikit-rf/scikit-rf
      modded the statistical file converter, and made shorthand     name for load_all_touchstones (lat) because i use it so frequently
      Merge branch 'general-dev' of github.com:scikit-rf/scikit-rf into general-dev
      Merge branch 'general-dev' of github.com:scikit-rf/scikit-rf into general-dev
      minor fix of merge error
      added a `getset` function to NetworkSet
      minor fix to plot_uncertainty_decomposition
      Merge branch 'general-dev' of github.com:scikit-rf/scikit-rf into general-dev
      minor edits
      Merge branch 'general-dev' of github.com:scikit-rf/scikit-rf into general-dev
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      Merge branch 'general-dev'
      removed unnecassary test case file, and updated MANIFEST

Alex Arsenovic (101):
      added a signature() function to NetworkSet
      Merge branch 'develop' of ssh://311.mbauwens.com/home/alex/scikit-rf into remotes/origin/develop
      Merge branch 'develop' of ssh://311.mbauwens.com/home/alex/scikit-rf into remotes/origin/develop
      added statistical file converter.
      not sure
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      Merge branch 'develop' of github.com:scikit-rf/scikit-rf into remotes/origin/develop
      test commit
      Merge branch 'error-fix' into develop
      testing
      added a doc page for development of skrf. minor doc changes
      minor doc edits, and working on auto-gen'd subnetworks
      Merge remote-tracking branch 'rgommers/fix-some-issues'
      added to .gitignore
      removed dynamic subnetworks, added shade auto color to     NetworkSet.plot_uncertainty_bounds
      Merge remote-tracking branch 'dong/develop' into develop
      re-added develop.rst which was accidentally removed.
      Merge branch 'network-slicing' into develop
      Merge branch 'develop'
      fixed indent on testNetwork
      fixed indent on testMedia.py
      fixed indent on all files recursively
      recusively ran reindent on entire project
      removed old docs. added link to developer page in docs.
      minor doc adds
      vectorized s2t, t2s and converted inv to a loop.
      NEW: implemented cascade_fast, and made connect call this for speed.
      FIX: modified watermark on write_touchstone
      DOC: added minor comments
      added c' functions for connect() and beging to tie into network
      added connect_s_fast() function which will call the c function     for connect
      Merge branch 'connect-in-c' into cascade-inv-vectorize
      network.connect() calls connect_s_fast, with a try/except
      adding connect_s_vectorized(), and inner_connect_s_vectorized()
      vectorized connect_s and inner_connect_s seem to be working
      removed old connect_s, and innerconnect_s, replaced with vectorized     version
      removed network.cascade_fast(), which is now unnecesary
      minor change to network.innerconnect()
      added __init__.py to src/ submodule
      Merge branch 'cascade-inv-vectorize'
      removed accidentally added file
      fixed stupid typo in docs
      implemented a is nan flag on magnitude_2_db. and worked on interpolate function
      minor comments
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      removed `frequency` argument of Calibration initializer.
      changed the checking on calibration.run()
      Merge branch 'calibration-remove-frequency'
      Merge branch 'db-nan-fix'
      fix network.two_port_reflect() z0 setting
      change ylabel for plot_s_mag.
      added a subnetwork and generate_all_subnetwork functions to Network object
      began dynamic properties on Network s,z,y, and     their components
      working on dynamic propties, having problems
      dynamic secondary properties are working.
      dynamic plotting methods working, need cleaning
      adding network format conversions
      modified plot_vs_frequency_generic to accomodate legend entries     of other network parameters
      deleted uneeded rectangular plotting functions
      cleaning up
      fixed generate_subnetworks correctly
      fixed up some bugs in plot generation,     re-writing some generic plot functions, such as
      added plot_smith function
      working on dynamic plots,
      fixed some bugs
      added new class for calibration sets and uncertainty estimation
      working on new calibrationSet Class
      workin
      redesigned the CalibrationSet class to use inherentance
      minor
      modfied teh script for cal_gen in convinience
      Merge branch 'template'
      minor
      added google tracking in template file
      Merge branch 'docs-add-tracker'
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      added version, modfied descr, included requires
      added ez_setup.py to Maniest, included libconnect libs as package data
      Merge branch 'fix-setup-bugs'
      Merge branch 'master' of github.com:scikit-rf/scikit-rf
      forgot
      fix impedance step bug, shelled out s-param tests, changed watermark
      Merge branch 'general-dev'
      removed libconnect warning
      fixed impedance_mismatch bug in network.py
      began adding cal coefs upload to zva class
      Merge branch 'master' of github.com:scikit-rf/scikit-rf into general-dev
      minor
      minors adds
      added a element-wise plotting function to network set for plot_s_db
      fixed minor bug on title call, in plot_uncertainty_decomp
      modfied y-axis labels of Network, to have soft brackets
      x-label units changed to be in soft brackets
      soft-bracket change on networkSet.py
      docs on concenience, and fixed bug on distributedCircuit     __repr__ string when I,C,R,G are vectors
      Merge branch 'calibration-set' into general-dev
      Merge branch 'general-dev'
      moving and adding proper test infrastructure for media subpackage
      added a readme explaining how the media test infrastructure     works
      added tests/ to calibration and moved existing tests into it.
      added existing test_network.py module and associated touchstone     files to the tests directory

Ralf Gommers (6):
      BUG: make single stub matching example work.  Also fix a few typos.
      BUG: undo unintended addition of ':q'.  Also whitespace fixes.
      TST: make nosetests work.  MediaTestCase shouldn't be a TestCase subclass.
      MAINT: remove .pyc file that was checked in by accident.
      MAINT: add .gitignore file, ignores .pyc and various temporary files.
      TST: allow running tests with nosetests also when not in testCases dir.

SjoerdOptLand (1):
      quick fix in case no Frequency instance is passed to Calibration()